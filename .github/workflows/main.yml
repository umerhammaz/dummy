name: Build APK
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-apk:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: '3.11'

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-pip \
            build-essential \
            git \
            python3-dev \
            ffmpeg \
            libsdl2-dev \
            libsdl2-image-dev \
            libsdl2-mixer-dev \
            libsdl2-ttf-dev \
            libportmidi-dev \
            libswscale-dev \
            libavformat-dev \
            libavcodec-dev \
            zlib1g-dev \
            wget \
            unzip

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install Cython==3.0.8
          pip install buildozer==1.5.0
          pip install --upgrade Pillow

      - name: Cache Buildozer dependencies
        uses: actions/cache@v4
        with:
          path: .buildozer
          key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}

      - name: Accept SDK licenses and setup Android SDK
        run: |
          yes | /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --licenses >/dev/null 2>&1
          /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager \
            "platform-tools" \
            "build-tools;34.0.0" \
            "platforms;android-34" \
            "cmdline-tools;latest" \
            "ndk;25.2.9519653" >/dev/null 2>&1

      - name: Build APK
        run: |
          rm -rf bin/*.apk || true
          
          # Run buildozer with output to a temporary file
          buildozer android debug > buildlog.txt 2>&1
          
          # Process the log to remove line numbers and show only last 200 lines
          cat buildlog.txt | sed 's/^[0-9]\+[[:space:]]\+\[/[/' | tail -n 200 | tee final_log.txt
          
          # Check for errors in the complete log
          if ! ls bin/*.apk 1> /dev/null 2>&1; then
            echo "Error: APK was not generated"
            echo "Showing errors from the build:"
            grep -i "error\|exception\|failed" buildlog.txt | tail -n 10
            exit 1
          else
            echo "APK generated successfully:"
            ls -l bin/*.apk
          fi

      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: bin/*.apk
          if-no-files-found: error
